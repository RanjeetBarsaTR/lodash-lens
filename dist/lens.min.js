"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var fp=require("lodash/fp");const mapWith=fp.curry((e,p)=>p.map(e)),lens=(e,p)=>r=>{const s=fp.compose(r,e);return e=>mapWith(r=>p(r,e),s(e))},mapConst=e=>({value:e,map:function(){return this}}),mapIdentity=e=>({value:e,map:p=>mapIdentity(p(e))}),view=fp.curry((e,p)=>e(mapConst)(p).value),over=fp.curry((e,p,r)=>e(e=>mapIdentity(p(e)))(r).value),always=e=>p=>e,same=e=>e,replace=fp.curry((e,p,r)=>{return over(e,(s=p,e=>s),r);var s}),merge=fp.curry((e,p,r)=>over(e,e=>({...e,...p}),r)),pathLens=e=>fp.isUndefined(e)?lens(same,same):lens(fp.get(e),fp.set(e)),pickLens=(...e)=>lens(p=>fp.pick(fp.flatten(e),p),(e,p)=>fp.isObject(p)?{...p,...e}:p),findLens=e=>lens(p=>fp.find(e,p),(p,r)=>{if(!fp.isArray(r))return r;const s=[...r],t=fp.findIndex(e,s);return t>=0&&s.splice(t,1,p),s});exports.findLens=findLens,exports.lens=lens,exports.mapWith=mapWith,exports.merge=merge,exports.over=over,exports.pathLens=pathLens,exports.pickLens=pickLens,exports.replace=replace,exports.view=view;
